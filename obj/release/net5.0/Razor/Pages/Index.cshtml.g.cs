#pragma checksum "F:\WorkStuff\Office work\Azure\MiracleCloud Study Azure\Demo Prep and Content\App Service Demo\GopalAPIDemo\GopalAPIDemo\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fbcd31175efca7e479f26096fcd1a2b7919e0061"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fbcd31175efca7e479f26096fcd1a2b7919e0061", @"/Pages/Index.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fbcd31175efca7e479f26096fcd1a2b7919e00612684", async() => {
                WriteLiteral("\r\n    <title>Transport Display Demo</title>\r\n    <!--<meta http-equiv=\"refresh\" content=\"5\" >   -->\r\n    <style>\r\n        #map {\r\n            height: 400px;\r\n            width: 100%;\r\n        }\r\n    </style>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fbcd31175efca7e479f26096fcd1a2b7919e00613877", async() => {
                WriteLiteral(@"
    <!-- <button onClick=""window.location.href=window.location.href"">Refresh Page</button>--> <!--reload page on click event-->
    <div class=""mainDiv"" align=""left"">
        <h1> Locations </h1>
        <table>
            <thead>
                <tr>
                    <td>Latitude</td>
                    <td>Longitude</td>
                </tr>
            </thead>
            <tbody id=""table_body"">
            </tbody>
        </table>
    </div>

    <!--<script src=""https://www.gstatic.com/firebasejs/8.1.2/firebase-app.js""></script>--><!--with my code-->
    <script src=""https://www.gstatic.com/firebasejs/3.3.2/firebase.js""></script><!--with this coder-->
    <!--<script src=""https://www.gstatic.com/firebasejs/4.12.1/firebase.js""></script>--><!--with web_tracker coder-->
    <!--<script src=""https://www.gstatic.com/firebasejs/8.1.2/firebase-analytics.js""></script>-->
    <script>

//firebase config
var firebaseConfig = {
//var config = {
  apiKey: ""AIzaSyCjGXMDSy_UmcIt3YA5wT");
                WriteLiteral(@"f6NsCgZs20yyo"",
  //apiKey: ""AIzaSyCjGXMDSy_UmcIt3YA5wTf6NsCgZs20yyo"", //new firebase api
  authDomain: ""fir-gps-6ffda.firebaseapp.com"",
  databaseURL: ""https://fir-gps-6ffda.firebaseio.com"",
  //projectId: ""fir-gps-6ffda"",
  storageBucket: ""fir-gps-6ffda.appspot.com"",
  //messagingSenderId: ""1066615075711"",
  //appId: ""1:1066615075711:web:996f18a4bb9b71ad5d604a"",
  //measurementId: ""G-CJSN11KJHN""
  //measurementId: ""G-6YKC7GP2TM"" //new firebase ID
};
//firebase.initializeApp(config);
firebase.initializeApp(firebaseConfig);
firebase.analytics();
    </script>
    <script src=""https://code.jquery.com/jquery-3.1.0.js""></script>
    <script>
//var rootRef = firebase.database().ref();
var rootRef = firebase.database().ref(""locations"") //fetching data from firebase under locations id
  rootRef.on(""child_added"", snap =>{
    var latitude = snap.child(""latitude"").val();
    var longitude = snap.child(""longitude"").val();
    //initMap(latitude,longitude);
    initMap(parseFloat(latitude), parse");
                WriteLiteral(@"Float(longitude));
    $(""#table_body"").append(""<tr><td>"" + latitude + ""</td><td>"" + longitude + ""</td></tr>"");

});

    </script>
    <h1>Map</h1>
    <div id=""map""></div>
    <script>
function initMap(latitude,longitude){

//initial position of the map
var options = {
    zoom: 8,
        center: {lat: 22.3039,lng:70.8022}
}
var map = new google.maps.Map(document.getElementById('map'), options);

//show an alert to check if the values are being fetched from firebase database stored in latitude and longitude.
//  alert (latitude + "" "" + longitude);

var marker = new google.maps.Marker({
        position:{lat: latitude, lng: longitude},
        //position:{lat: parseFloat(latitude), lng: parseFloat(longitude)}
        map:map,
      });

     //Shows inormation on marker on 'on click event'

     /*var infoWindow = new google.maps.InfoWindow({
       content:'<h4>My current location</h4>'
     });

     marker.addListener('click', function(){
      infoWindow.open(map, marke");
                WriteLiteral(@"r);
     });*/

}
    </script>
    <script src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyAlHEhil-uGJkwNrh1wkV12vYo8GlQUqaE"">
 //currently my personal API
  //AIzaSyD0w2dY7OZvF6nBvnLLxzAzXi05l_8jc-o //extra map API from internet
    </script>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<GopalAPIDemo.Pages.IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<GopalAPIDemo.Pages.IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<GopalAPIDemo.Pages.IndexModel>)PageContext?.ViewData;
        public GopalAPIDemo.Pages.IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
